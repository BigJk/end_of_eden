name: Publish Releases

on:
  release:
    types: [created]

jobs:
  release-wasm:
    permissions: write-all
    name: release js/wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          goversion: "1.23.0"
          md5sum: FALSE
          compress_assets: "zip"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_command: "apt-get update && apt-get install --no-install-recommends -y pkg-config libasound2-dev libx11-dev && ./internal/misc/build_index.sh ./assets && cp $(go env GOROOT)/misc/wasm/wasm_exec.js ./cmd/game_wasm/wasm_exec.js"
          project_path: "./cmd/game_wasm"
          binary_name: "eoe.wasm"
          extra_files: "./assets/ ./cmd/game_wasm/index.html ./cmd/game_wasm/wasm_exec.js"
          ldflags: "-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'"
          goos: js
          goarch: wasm
  release-linux-term-amd64:
    permissions: write-all
    name: release linux/amd64 term
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 1
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          md5sum: FALSE
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_command: "apt-get update && apt-get install --no-install-recommends -y pkg-config libasound2-dev libx11-dev"
          project_path: "./cmd/game"
          binary_name: "end_of_eden_term"
          extra_files: "./assets/"
          ldflags: "-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'"
          goos: linux
          goarch: amd64
          compress_assets: zip
  release-linux-gl-amd64:
    permissions: write-all
    name: release linux/amd64 gl
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 1
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          md5sum: FALSE
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_command: "apt-get update && apt-get install --no-install-recommends -y pkg-config libasound2-dev libx11-dev gcc libc6-dev libglu1-mesa-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev"
          project_path: "./cmd/game_win"
          binary_name: "end_of_eden_gl"
          build_flags: "-tags ebitenginesinglethread"
          extra_files: "./assets/"
          ldflags: "-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'"
          goos: linux
          goarch: amd64
          compress_assets: zip
  release-windows-term-amd64:
    permissions: write-all
    name: release windows/amd64 term
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          md5sum: FALSE
          github_token: ${{ secrets.GITHUB_TOKEN }}
          project_path: "./cmd/game"
          binary_name: "end_of_eden_term"
          build_flags: "-tags ebitenginesinglethread"
          extra_files: "./assets/"
          ldflags: "-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'"
          goos: windows
          goarch: amd64
  release-windows-gl-amd64:
    permissions: write-all
    name: release windows/amd64 gl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          md5sum: FALSE
          github_token: ${{ secrets.GITHUB_TOKEN }}
          project_path: "./cmd/game_win"
          binary_name: "end_of_eden_gl"
          extra_files: "./assets/"
          ldflags: "-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'"
          goos: windows
          goarch: amd64
  release-macos-term-amd64:
    permissions: write-all
    name: release macos/amd64 term
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.23"
      - name: Build
        run: |
          go build -ldflags="-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'" -o end_of_eden -tags ebitenginesinglethread ./cmd/game
          export BIN=end_of_eden_term-$(basename ${GITHUB_REF})-macos-amd64
          mkdir $BIN
          cp ./end_of_eden $BIN/end_of_eden
          cp -r ./assets $BIN/assets/
          zip -r $BIN.zip $BIN
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: end_of_eden_term-${{ github.ref_name }}-macos-amd64.zip
  release-macos-gl-amd64:
    permissions: write-all
    name: release macos/amd64 gl
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Fetch Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.23"
      - name: Build
        run: |
          go build -ldflags="-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'" -o end_of_eden -tags ebitenginesinglethread ./cmd/game_win
          export BIN=end_of_eden_gl-$(basename ${GITHUB_REF})-macos-amd64
          mkdir $BIN
          cp ./end_of_eden $BIN/end_of_eden
          cp -r ./assets $BIN/assets/
          zip -r $BIN.zip $BIN
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: end_of_eden_gl-${{ github.ref_name }}-macos-amd64.zip
  release-macos-term-arm64:
    permissions: write-all
    name: release macos/arm64 term
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.23"
      - name: Build
        run: |
          go build -ldflags="-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'" -o end_of_eden -tags ebitenginesinglethread ./cmd/game
          export BIN=end_of_eden_term-$(basename ${GITHUB_REF})-macos-arm64
          mkdir $BIN
          cp ./end_of_eden $BIN/end_of_eden
          cp -r ./assets $BIN/assets/
          zip -r $BIN.zip $BIN
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: end_of_eden_term-${{ github.ref_name }}-macos-arm64.zip
  release-macos-gl-arm64:
    permissions: write-all
    name: release macos/arm64 gl
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Fetch Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.23"
      - name: Build
        run: |
          go build -ldflags="-X 'github.com/BigJk/end_of_eden/internal/git.Tag=${{ github.ref_name }}' -X 'github.com/BigJk/end_of_eden/internal/git.CommitHash=${{ github.sha }}'" -o end_of_eden -tags ebitenginesinglethread ./cmd/game_win
          export BIN=end_of_eden_gl-$(basename ${GITHUB_REF})-macos-arm64
          mkdir $BIN
          cp ./end_of_eden $BIN/end_of_eden
          cp -r ./assets $BIN/assets/
          zip -r $BIN.zip $BIN
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: end_of_eden_gl-${{ github.ref_name }}-macos-arm64.zip
  release-itch:
    permissions: write-all
    name: release itch
    runs-on: ubuntu-latest
    needs:
      [
        release-windows-term-amd64,
        release-windows-gl-amd64,
        release-macos-term-amd64,
        release-macos-gl-amd64,
        release-macos-term-arm64,
        release-macos-gl-arm64,
        release-linux-term-amd64,
        release-linux-gl-amd64,
        release-wasm,
      ]
    steps:
      - name: Download Release
        uses: robinraju/release-downloader@v1
        with:
          repository: "BigJk/end_of_eden"
          tag: ${{ github.ref_name }}
          fileName: "*.zip"
      - name: Install Butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          rm butler.zip
          ./butler -V
      - name: Push to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          ./butler push end_of_eden_term-${{ github.ref_name }}-windows-amd64.zip BigJk/end-of-eden:windows-term-amd64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_gl-${{ github.ref_name }}-windows-amd64.zip BigJk/end-of-eden:windows-gl-amd64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_term-${{ github.ref_name }}-macos-amd64.zip BigJk/end-of-eden:macosx-term-amd64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_gl-${{ github.ref_name }}-macos-amd64.zip BigJk/end-of-eden:macosx-gl-amd64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_term-${{ github.ref_name }}-macos-arm64.zip BigJk/end-of-eden:macosx-term-arm64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_gl-${{ github.ref_name }}-macos-arm64.zip BigJk/end-of-eden:macosx-gl-arm64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_term-${{ github.ref_name }}-linux-amd64.zip BigJk/end-of-eden:linux-term-amd64 --userversion ${{ github.ref_name }}
          ./butler push end_of_eden_gl-${{ github.ref_name }}-linux-amd64.zip BigJk/end-of-eden:linux-gl-amd64 --userversion ${{ github.ref_name }}
          ./butler push eoe.wasm-${{ github.ref_name }}-js-wasm.zip BigJk/end-of-eden:web --userversion ${{ github.ref_name }}
